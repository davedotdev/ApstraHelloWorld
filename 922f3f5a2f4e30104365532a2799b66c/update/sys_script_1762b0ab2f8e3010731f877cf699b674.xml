<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_686806_test_0_collection_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>HelloWorld</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var requestBody;
    var responseBody;
    var status;
    var sm;
	var item = current.getValue("item");
    try {
        sm = new sn_ws.RESTMessageV2();
        sm.setBasicAuth("admin", "admin");
        sm.setStringParameter("symbol", "NOW");
        sm.setStringParameterNoEscape("xml_data", "<data>test</data>");
        sm.setMIDServer('dumpster');
		sm.setEndpoint("http://localhost:8080/helloworld/"+item);
		sm.setHttpMethod("get");
        response = sm.executeAsync(); // Might throw exception if http connection timed out or some issue with sending request itself because of encryption/decryption of password.

        response.waitForResponse(60); // In seconds. Wait at most 60 seconds to get response from ECC Queue/Mid Server //Might throw exception timing out waiting for response in ECC queue.

        responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();
        status = response.getStatusCode();
    } catch (ex) {
        responseBody = ex.getMessage();
        status = '500';
    } finally {
        requestBody = sm ? sm.getRequestBody() : null;
    }
    gs.info("Request Body: " + requestBody);
    gs.info("Response: " + responseBody);
    gs.info("HTTP Status: " + status);

	current.setValue("description", responseBody);
	current.update();

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-24 10:28:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1762b0ab2f8e3010731f877cf699b674</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>HelloWorld</sys_name>
        <sys_overrides/>
        <sys_package display_value="Apstra Hello World" source="x_686062_apstra_he">922f3f5a2f4e30104365532a2799b66c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Apstra Hello World">922f3f5a2f4e30104365532a2799b66c</sys_scope>
        <sys_update_name>sys_script_1762b0ab2f8e3010731f877cf699b674</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-24 12:56:26</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1762b0ab2f8e3010731f877cf699b674"/>
</record_update>
